'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsIndisciplineCases2"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsIndisciplineCases2
    Inherits Global.System.Data.DataSet
    
    Private tabledtIndisciplineCases2 As dtIndisciplineCases2DataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("dtIndisciplineCases2")) Is Nothing) Then
                MyBase.Tables.Add(New dtIndisciplineCases2DataTable(ds.Tables("dtIndisciplineCases2")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtIndisciplineCases2() As dtIndisciplineCases2DataTable
        Get
            Return Me.tabledtIndisciplineCases2
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsIndisciplineCases2 = CType(MyBase.Clone,dsIndisciplineCases2)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("dtIndisciplineCases2")) Is Nothing) Then
                MyBase.Tables.Add(New dtIndisciplineCases2DataTable(ds.Tables("dtIndisciplineCases2")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tabledtIndisciplineCases2 = CType(MyBase.Tables("dtIndisciplineCases2"),dtIndisciplineCases2DataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtIndisciplineCases2) Is Nothing) Then
                Me.tabledtIndisciplineCases2.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dsIndisciplineCases2"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsIndisciplineCases2.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tabledtIndisciplineCases2 = New dtIndisciplineCases2DataTable()
        MyBase.Tables.Add(Me.tabledtIndisciplineCases2)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializedtIndisciplineCases2() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsIndisciplineCases2 = New dsIndisciplineCases2()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub dtIndisciplineCases2RowChangeEventHandler(ByVal sender As Object, ByVal e As dtIndisciplineCases2RowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtIndisciplineCases2DataTable
        Inherits Global.System.Data.TypedTableBase(Of dtIndisciplineCases2Row)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnDATEOFOCCURENCE As Global.System.Data.DataColumn
        
        Private columnTERM As Global.System.Data.DataColumn
        
        Private columnNAMEOFSTUDENT As Global.System.Data.DataColumn
        
        Private columnADMISSIONNUMBER As Global.System.Data.DataColumn
        
        Private columnGENDER As Global.System.Data.DataColumn
        
        Private columnKCPEMARKS As Global.System.Data.DataColumn
        
        Private columnKCPEGRADE As Global.System.Data.DataColumn
        
        Private columnCURRENTMARKS As Global.System.Data.DataColumn
        
        Private columnCURRENTPOINTS As Global.System.Data.DataColumn
        
        Private columnCURRENTGRADE As Global.System.Data.DataColumn
        
        Private columnSTUDENTVAP As Global.System.Data.DataColumn
        
        Private columnCLASS As Global.System.Data.DataColumn
        
        Private columnSTREAM As Global.System.Data.DataColumn
        
        Private columnFORMERSCHOOL As Global.System.Data.DataColumn
        
        Private columnDATEOFADMISSION As Global.System.Data.DataColumn
        
        Private columnTYPEOFOFFENSE As Global.System.Data.DataColumn
        
        Private columnOFFENSECATEGORY As Global.System.Data.DataColumn
        
        Private columnFAMILYSITUATION As Global.System.Data.DataColumn
        
        Private columnNAMEOFPARENT As Global.System.Data.DataColumn
        
        Private columnPARENTPHONENUMBER As Global.System.Data.DataColumn
        
        Private columnTYPEOFPUNISHMENT As Global.System.Data.DataColumn
        
        Private columnREMARKS As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtIndisciplineCases2"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATEOFOCCURENCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATEOFOCCURENCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TERMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTERM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMEOFSTUDENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMEOFSTUDENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ADMISSIONNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADMISSIONNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GENDERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGENDER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KCPEMARKSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKCPEMARKS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KCPEGRADEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKCPEGRADE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CURRENTMARKSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCURRENTMARKS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CURRENTPOINTSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCURRENTPOINTS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CURRENTGRADEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCURRENTGRADE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STUDENTVAPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTUDENTVAP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLASSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLASS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STREAMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTREAM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FORMERSCHOOLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFORMERSCHOOL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATEOFADMISSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATEOFADMISSION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TYPEOFOFFENSEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTYPEOFOFFENSE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OFFENSECATEGORYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOFFENSECATEGORY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FAMILYSITUATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFAMILYSITUATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMEOFPARENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMEOFPARENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PARENTPHONENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPARENTPHONENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TYPEOFPUNISHMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTYPEOFPUNISHMENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REMARKSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREMARKS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtIndisciplineCases2Row
            Get
                Return CType(Me.Rows(index),dtIndisciplineCases2Row)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtIndisciplineCases2RowChanging As dtIndisciplineCases2RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtIndisciplineCases2RowChanged As dtIndisciplineCases2RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtIndisciplineCases2RowDeleting As dtIndisciplineCases2RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtIndisciplineCases2RowDeleted As dtIndisciplineCases2RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AdddtIndisciplineCases2Row(ByVal row As dtIndisciplineCases2Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AdddtIndisciplineCases2Row( _
                    ByVal ID As Integer,  _
                    ByVal DATEOFOCCURENCE As Date,  _
                    ByVal TERM As String,  _
                    ByVal NAMEOFSTUDENT As String,  _
                    ByVal ADMISSIONNUMBER As String,  _
                    ByVal GENDER As String,  _
                    ByVal KCPEMARKS As Single,  _
                    ByVal KCPEGRADE As String,  _
                    ByVal CURRENTMARKS As Single,  _
                    ByVal CURRENTPOINTS As Single,  _
                    ByVal CURRENTGRADE As String,  _
                    ByVal STUDENTVAP As Single,  _
                    ByVal _CLASS As String,  _
                    ByVal STREAM As String,  _
                    ByVal FORMERSCHOOL As String,  _
                    ByVal DATEOFADMISSION As Date,  _
                    ByVal TYPEOFOFFENSE As String,  _
                    ByVal OFFENSECATEGORY As String,  _
                    ByVal FAMILYSITUATION As String,  _
                    ByVal NAMEOFPARENT As String,  _
                    ByVal PARENTPHONENUMBER As String,  _
                    ByVal TYPEOFPUNISHMENT As String,  _
                    ByVal REMARKS As String) As dtIndisciplineCases2Row
            Dim rowdtIndisciplineCases2Row As dtIndisciplineCases2Row = CType(Me.NewRow,dtIndisciplineCases2Row)
            Dim columnValuesArray() As Object = New Object() {ID, DATEOFOCCURENCE, TERM, NAMEOFSTUDENT, ADMISSIONNUMBER, GENDER, KCPEMARKS, KCPEGRADE, CURRENTMARKS, CURRENTPOINTS, CURRENTGRADE, STUDENTVAP, _CLASS, STREAM, FORMERSCHOOL, DATEOFADMISSION, TYPEOFOFFENSE, OFFENSECATEGORY, FAMILYSITUATION, NAMEOFPARENT, PARENTPHONENUMBER, TYPEOFPUNISHMENT, REMARKS}
            rowdtIndisciplineCases2Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtIndisciplineCases2Row)
            Return rowdtIndisciplineCases2Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtIndisciplineCases2DataTable = CType(MyBase.Clone,dtIndisciplineCases2DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtIndisciplineCases2DataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnDATEOFOCCURENCE = MyBase.Columns("DATEOFOCCURENCE")
            Me.columnTERM = MyBase.Columns("TERM")
            Me.columnNAMEOFSTUDENT = MyBase.Columns("NAMEOFSTUDENT")
            Me.columnADMISSIONNUMBER = MyBase.Columns("ADMISSIONNUMBER")
            Me.columnGENDER = MyBase.Columns("GENDER")
            Me.columnKCPEMARKS = MyBase.Columns("KCPEMARKS")
            Me.columnKCPEGRADE = MyBase.Columns("KCPEGRADE")
            Me.columnCURRENTMARKS = MyBase.Columns("CURRENTMARKS")
            Me.columnCURRENTPOINTS = MyBase.Columns("CURRENTPOINTS")
            Me.columnCURRENTGRADE = MyBase.Columns("CURRENTGRADE")
            Me.columnSTUDENTVAP = MyBase.Columns("STUDENTVAP")
            Me.columnCLASS = MyBase.Columns("CLASS")
            Me.columnSTREAM = MyBase.Columns("STREAM")
            Me.columnFORMERSCHOOL = MyBase.Columns("FORMERSCHOOL")
            Me.columnDATEOFADMISSION = MyBase.Columns("DATEOFADMISSION")
            Me.columnTYPEOFOFFENSE = MyBase.Columns("TYPEOFOFFENSE")
            Me.columnOFFENSECATEGORY = MyBase.Columns("OFFENSECATEGORY")
            Me.columnFAMILYSITUATION = MyBase.Columns("FAMILYSITUATION")
            Me.columnNAMEOFPARENT = MyBase.Columns("NAMEOFPARENT")
            Me.columnPARENTPHONENUMBER = MyBase.Columns("PARENTPHONENUMBER")
            Me.columnTYPEOFPUNISHMENT = MyBase.Columns("TYPEOFPUNISHMENT")
            Me.columnREMARKS = MyBase.Columns("REMARKS")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnDATEOFOCCURENCE = New Global.System.Data.DataColumn("DATEOFOCCURENCE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATEOFOCCURENCE)
            Me.columnTERM = New Global.System.Data.DataColumn("TERM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTERM)
            Me.columnNAMEOFSTUDENT = New Global.System.Data.DataColumn("NAMEOFSTUDENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMEOFSTUDENT)
            Me.columnADMISSIONNUMBER = New Global.System.Data.DataColumn("ADMISSIONNUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADMISSIONNUMBER)
            Me.columnGENDER = New Global.System.Data.DataColumn("GENDER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGENDER)
            Me.columnKCPEMARKS = New Global.System.Data.DataColumn("KCPEMARKS", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKCPEMARKS)
            Me.columnKCPEGRADE = New Global.System.Data.DataColumn("KCPEGRADE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKCPEGRADE)
            Me.columnCURRENTMARKS = New Global.System.Data.DataColumn("CURRENTMARKS", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCURRENTMARKS)
            Me.columnCURRENTPOINTS = New Global.System.Data.DataColumn("CURRENTPOINTS", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCURRENTPOINTS)
            Me.columnCURRENTGRADE = New Global.System.Data.DataColumn("CURRENTGRADE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCURRENTGRADE)
            Me.columnSTUDENTVAP = New Global.System.Data.DataColumn("STUDENTVAP", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTUDENTVAP)
            Me.columnCLASS = New Global.System.Data.DataColumn("CLASS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnCLASS.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "CLASSColumn")
            Me.columnCLASS.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnCLASS")
            Me.columnCLASS.ExtendedProperties.Add("Generator_UserColumnName", "CLASS")
            MyBase.Columns.Add(Me.columnCLASS)
            Me.columnSTREAM = New Global.System.Data.DataColumn("STREAM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTREAM)
            Me.columnFORMERSCHOOL = New Global.System.Data.DataColumn("FORMERSCHOOL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFORMERSCHOOL)
            Me.columnDATEOFADMISSION = New Global.System.Data.DataColumn("DATEOFADMISSION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATEOFADMISSION)
            Me.columnTYPEOFOFFENSE = New Global.System.Data.DataColumn("TYPEOFOFFENSE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTYPEOFOFFENSE)
            Me.columnOFFENSECATEGORY = New Global.System.Data.DataColumn("OFFENSECATEGORY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOFFENSECATEGORY)
            Me.columnFAMILYSITUATION = New Global.System.Data.DataColumn("FAMILYSITUATION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFAMILYSITUATION)
            Me.columnNAMEOFPARENT = New Global.System.Data.DataColumn("NAMEOFPARENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMEOFPARENT)
            Me.columnPARENTPHONENUMBER = New Global.System.Data.DataColumn("PARENTPHONENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPARENTPHONENUMBER)
            Me.columnTYPEOFPUNISHMENT = New Global.System.Data.DataColumn("TYPEOFPUNISHMENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTYPEOFPUNISHMENT)
            Me.columnREMARKS = New Global.System.Data.DataColumn("REMARKS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREMARKS)
            Me.columnDATEOFOCCURENCE.Caption = "DATE OF OCCURENCE"
            Me.columnNAMEOFSTUDENT.Caption = "NAME OF STUDENT"
            Me.columnADMISSIONNUMBER.Caption = "ADMNO"
            Me.columnCURRENTMARKS.Caption = "CURRMARKS"
            Me.columnCURRENTPOINTS.Caption = "CURRPNTS"
            Me.columnCURRENTGRADE.Caption = "CURRGRADE"
            Me.columnSTUDENTVAP.Caption = "VAP"
            Me.columnFORMERSCHOOL.Caption = "FORMER SCHOOL"
            Me.columnDATEOFADMISSION.Caption = "DATE OF ADMISSION"
            Me.columnTYPEOFOFFENSE.Caption = "TYPE OF OFFENSE"
            Me.columnOFFENSECATEGORY.Caption = "OFFENSE CATEGORY"
            Me.columnFAMILYSITUATION.Caption = "FAMILY SITUATION"
            Me.columnNAMEOFPARENT.Caption = "NAME OF PARENT"
            Me.columnPARENTPHONENUMBER.Caption = "PARENT PHONE"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewdtIndisciplineCases2Row() As dtIndisciplineCases2Row
            Return CType(Me.NewRow,dtIndisciplineCases2Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtIndisciplineCases2Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtIndisciplineCases2Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtIndisciplineCases2RowChangedEvent) Is Nothing) Then
                RaiseEvent dtIndisciplineCases2RowChanged(Me, New dtIndisciplineCases2RowChangeEvent(CType(e.Row,dtIndisciplineCases2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtIndisciplineCases2RowChangingEvent) Is Nothing) Then
                RaiseEvent dtIndisciplineCases2RowChanging(Me, New dtIndisciplineCases2RowChangeEvent(CType(e.Row,dtIndisciplineCases2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtIndisciplineCases2RowDeletedEvent) Is Nothing) Then
                RaiseEvent dtIndisciplineCases2RowDeleted(Me, New dtIndisciplineCases2RowChangeEvent(CType(e.Row,dtIndisciplineCases2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtIndisciplineCases2RowDeletingEvent) Is Nothing) Then
                RaiseEvent dtIndisciplineCases2RowDeleting(Me, New dtIndisciplineCases2RowChangeEvent(CType(e.Row,dtIndisciplineCases2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovedtIndisciplineCases2Row(ByVal row As dtIndisciplineCases2Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsIndisciplineCases2 = New dsIndisciplineCases2()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtIndisciplineCases2DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtIndisciplineCases2Row
        Inherits Global.System.Data.DataRow
        
        Private tabledtIndisciplineCases2 As dtIndisciplineCases2DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtIndisciplineCases2 = CType(Me.Table,dtIndisciplineCases2DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledtIndisciplineCases2.IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ID' in table 'dtIndisciplineCases2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtIndisciplineCases2.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATEOFOCCURENCE() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledtIndisciplineCases2.DATEOFOCCURENCEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DATEOFOCCURENCE' in table 'dtIndisciplineCases2' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabledtIndisciplineCases2.DATEOFOCCURENCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TERM() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtIndisciplineCases2.TERMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TERM' in table 'dtIndisciplineCases2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtIndisciplineCases2.TERMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMEOFSTUDENT() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtIndisciplineCases2.NAMEOFSTUDENTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMEOFSTUDENT' in table 'dtIndisciplineCases2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtIndisciplineCases2.NAMEOFSTUDENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ADMISSIONNUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtIndisciplineCases2.ADMISSIONNUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADMISSIONNUMBER' in table 'dtIndisciplineCases2' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabledtIndisciplineCases2.ADMISSIONNUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GENDER() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtIndisciplineCases2.GENDERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GENDER' in table 'dtIndisciplineCases2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtIndisciplineCases2.GENDERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KCPEMARKS() As Single
            Get
                Try 
                    Return CType(Me(Me.tabledtIndisciplineCases2.KCPEMARKSColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KCPEMARKS' in table 'dtIndisciplineCases2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtIndisciplineCases2.KCPEMARKSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KCPEGRADE() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtIndisciplineCases2.KCPEGRADEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KCPEGRADE' in table 'dtIndisciplineCases2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtIndisciplineCases2.KCPEGRADEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CURRENTMARKS() As Single
            Get
                Try 
                    Return CType(Me(Me.tabledtIndisciplineCases2.CURRENTMARKSColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CURRENTMARKS' in table 'dtIndisciplineCases2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtIndisciplineCases2.CURRENTMARKSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CURRENTPOINTS() As Single
            Get
                Try 
                    Return CType(Me(Me.tabledtIndisciplineCases2.CURRENTPOINTSColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CURRENTPOINTS' in table 'dtIndisciplineCases2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtIndisciplineCases2.CURRENTPOINTSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CURRENTGRADE() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtIndisciplineCases2.CURRENTGRADEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CURRENTGRADE' in table 'dtIndisciplineCases2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtIndisciplineCases2.CURRENTGRADEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STUDENTVAP() As Single
            Get
                Try 
                    Return CType(Me(Me.tabledtIndisciplineCases2.STUDENTVAPColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STUDENTVAP' in table 'dtIndisciplineCases2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtIndisciplineCases2.STUDENTVAPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property _CLASS() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtIndisciplineCases2.CLASSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLASS' in table 'dtIndisciplineCases2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtIndisciplineCases2.CLASSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STREAM() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtIndisciplineCases2.STREAMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STREAM' in table 'dtIndisciplineCases2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtIndisciplineCases2.STREAMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FORMERSCHOOL() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtIndisciplineCases2.FORMERSCHOOLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FORMERSCHOOL' in table 'dtIndisciplineCases2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtIndisciplineCases2.FORMERSCHOOLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATEOFADMISSION() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledtIndisciplineCases2.DATEOFADMISSIONColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DATEOFADMISSION' in table 'dtIndisciplineCases2' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabledtIndisciplineCases2.DATEOFADMISSIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TYPEOFOFFENSE() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtIndisciplineCases2.TYPEOFOFFENSEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TYPEOFOFFENSE' in table 'dtIndisciplineCases2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtIndisciplineCases2.TYPEOFOFFENSEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OFFENSECATEGORY() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtIndisciplineCases2.OFFENSECATEGORYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OFFENSECATEGORY' in table 'dtIndisciplineCases2' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabledtIndisciplineCases2.OFFENSECATEGORYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FAMILYSITUATION() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtIndisciplineCases2.FAMILYSITUATIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FAMILYSITUATION' in table 'dtIndisciplineCases2' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabledtIndisciplineCases2.FAMILYSITUATIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMEOFPARENT() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtIndisciplineCases2.NAMEOFPARENTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMEOFPARENT' in table 'dtIndisciplineCases2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtIndisciplineCases2.NAMEOFPARENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PARENTPHONENUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtIndisciplineCases2.PARENTPHONENUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PARENTPHONENUMBER' in table 'dtIndisciplineCases2' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtIndisciplineCases2.PARENTPHONENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TYPEOFPUNISHMENT() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtIndisciplineCases2.TYPEOFPUNISHMENTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TYPEOFPUNISHMENT' in table 'dtIndisciplineCases2' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabledtIndisciplineCases2.TYPEOFPUNISHMENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REMARKS() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtIndisciplineCases2.REMARKSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REMARKS' in table 'dtIndisciplineCases2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtIndisciplineCases2.REMARKSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIDNull() As Boolean
            Return Me.IsNull(Me.tabledtIndisciplineCases2.IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIDNull()
            Me(Me.tabledtIndisciplineCases2.IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDATEOFOCCURENCENull() As Boolean
            Return Me.IsNull(Me.tabledtIndisciplineCases2.DATEOFOCCURENCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDATEOFOCCURENCENull()
            Me(Me.tabledtIndisciplineCases2.DATEOFOCCURENCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTERMNull() As Boolean
            Return Me.IsNull(Me.tabledtIndisciplineCases2.TERMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTERMNull()
            Me(Me.tabledtIndisciplineCases2.TERMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMEOFSTUDENTNull() As Boolean
            Return Me.IsNull(Me.tabledtIndisciplineCases2.NAMEOFSTUDENTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMEOFSTUDENTNull()
            Me(Me.tabledtIndisciplineCases2.NAMEOFSTUDENTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsADMISSIONNUMBERNull() As Boolean
            Return Me.IsNull(Me.tabledtIndisciplineCases2.ADMISSIONNUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetADMISSIONNUMBERNull()
            Me(Me.tabledtIndisciplineCases2.ADMISSIONNUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGENDERNull() As Boolean
            Return Me.IsNull(Me.tabledtIndisciplineCases2.GENDERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGENDERNull()
            Me(Me.tabledtIndisciplineCases2.GENDERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKCPEMARKSNull() As Boolean
            Return Me.IsNull(Me.tabledtIndisciplineCases2.KCPEMARKSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKCPEMARKSNull()
            Me(Me.tabledtIndisciplineCases2.KCPEMARKSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKCPEGRADENull() As Boolean
            Return Me.IsNull(Me.tabledtIndisciplineCases2.KCPEGRADEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKCPEGRADENull()
            Me(Me.tabledtIndisciplineCases2.KCPEGRADEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCURRENTMARKSNull() As Boolean
            Return Me.IsNull(Me.tabledtIndisciplineCases2.CURRENTMARKSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCURRENTMARKSNull()
            Me(Me.tabledtIndisciplineCases2.CURRENTMARKSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCURRENTPOINTSNull() As Boolean
            Return Me.IsNull(Me.tabledtIndisciplineCases2.CURRENTPOINTSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCURRENTPOINTSNull()
            Me(Me.tabledtIndisciplineCases2.CURRENTPOINTSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCURRENTGRADENull() As Boolean
            Return Me.IsNull(Me.tabledtIndisciplineCases2.CURRENTGRADEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCURRENTGRADENull()
            Me(Me.tabledtIndisciplineCases2.CURRENTGRADEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTUDENTVAPNull() As Boolean
            Return Me.IsNull(Me.tabledtIndisciplineCases2.STUDENTVAPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTUDENTVAPNull()
            Me(Me.tabledtIndisciplineCases2.STUDENTVAPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Is_CLASSNull() As Boolean
            Return Me.IsNull(Me.tabledtIndisciplineCases2.CLASSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Set_CLASSNull()
            Me(Me.tabledtIndisciplineCases2.CLASSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTREAMNull() As Boolean
            Return Me.IsNull(Me.tabledtIndisciplineCases2.STREAMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTREAMNull()
            Me(Me.tabledtIndisciplineCases2.STREAMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFORMERSCHOOLNull() As Boolean
            Return Me.IsNull(Me.tabledtIndisciplineCases2.FORMERSCHOOLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFORMERSCHOOLNull()
            Me(Me.tabledtIndisciplineCases2.FORMERSCHOOLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDATEOFADMISSIONNull() As Boolean
            Return Me.IsNull(Me.tabledtIndisciplineCases2.DATEOFADMISSIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDATEOFADMISSIONNull()
            Me(Me.tabledtIndisciplineCases2.DATEOFADMISSIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTYPEOFOFFENSENull() As Boolean
            Return Me.IsNull(Me.tabledtIndisciplineCases2.TYPEOFOFFENSEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTYPEOFOFFENSENull()
            Me(Me.tabledtIndisciplineCases2.TYPEOFOFFENSEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOFFENSECATEGORYNull() As Boolean
            Return Me.IsNull(Me.tabledtIndisciplineCases2.OFFENSECATEGORYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOFFENSECATEGORYNull()
            Me(Me.tabledtIndisciplineCases2.OFFENSECATEGORYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFAMILYSITUATIONNull() As Boolean
            Return Me.IsNull(Me.tabledtIndisciplineCases2.FAMILYSITUATIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFAMILYSITUATIONNull()
            Me(Me.tabledtIndisciplineCases2.FAMILYSITUATIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMEOFPARENTNull() As Boolean
            Return Me.IsNull(Me.tabledtIndisciplineCases2.NAMEOFPARENTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMEOFPARENTNull()
            Me(Me.tabledtIndisciplineCases2.NAMEOFPARENTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPARENTPHONENUMBERNull() As Boolean
            Return Me.IsNull(Me.tabledtIndisciplineCases2.PARENTPHONENUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPARENTPHONENUMBERNull()
            Me(Me.tabledtIndisciplineCases2.PARENTPHONENUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTYPEOFPUNISHMENTNull() As Boolean
            Return Me.IsNull(Me.tabledtIndisciplineCases2.TYPEOFPUNISHMENTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTYPEOFPUNISHMENTNull()
            Me(Me.tabledtIndisciplineCases2.TYPEOFPUNISHMENTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREMARKSNull() As Boolean
            Return Me.IsNull(Me.tabledtIndisciplineCases2.REMARKSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREMARKSNull()
            Me(Me.tabledtIndisciplineCases2.REMARKSColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class dtIndisciplineCases2RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtIndisciplineCases2Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As dtIndisciplineCases2Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As dtIndisciplineCases2Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
